name: PR Review

on:
  pull_request_target:
    types: [opened]

jobs:
  review-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Inject Custom Config (For Proxy Support)
        run: |
          mkdir -p ~/.config/opencode
          # Build and write opencode.json with secrets
          CONFIG='{
            "$schema": "https://opencode.ai/config.json",
            "provider": {
              "llm-proxy": {
                "npm": "@ai-sdk/openai-compatible",
                "name": "Proxy",
                "options": {
                  "baseURL": "${{ secrets.PROXY_BASE_URL }}",
                  "apiKey": "${{ secrets.PROXY_API_KEY }}",
                  "headers": {
                    "User-Agent": "OpenCode/1.0",
                    "X-Custom-Header": "your-value"
                  }
                },
                "models": {
                  "${{ secrets.OPENCODE_MODEL }}": {
                    "name": "Custom Model"
                  }
                }
              }
            },
            "autoupdate": true
          }'
          echo "$CONFIG" > ~/.config/opencode/opencode.json

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-3.12-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-3.12

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Install opencode
        run: curl -fsSL https://opencode.ai/install | bash

        # FIX: Create the directory that opencode expects
      - name: Ensure opencode directory exists
        run: mkdir -p /home/runner/.local/share/opencode/project
      - name: Review PR comprehensively
        env:
          OPENCODE_API_KEY: ${{ secrets.PROXY_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENCODE_PERMISSION: |
            {
              "bash": {
                "gh*": "allow",
                "git*": "allow"
              },
              "webfetch": "deny"
            }
        run: |
          opencode run --share -m llm-proxy/${{ secrets.OPENCODE_MODEL }} "You are a meticulous and collaborative code reviewer. Your primary objective is to help improve the code quality by providing constructive and actionable feedback.

          A new pull request has been submitted: '${{ github.event.pull_request.title }}'

          <pr-number>
          ${{ github.event.pull_request.number }}
          </pr-number>

          <pr-description>
          ${{ github.event.pull_request.body }}
          </pr-description>

          Conduct a comprehensive review of this pull request by performing the following tasks:
          1.  **Analyze the Changes:** Fetch the pull request branch and carefully inspect all code modifications in their full context.
          2.  **Verify the Implementation:** Ensure that the implementation correctly addresses the goals stated in the PR description and any linked issues.
          3.  **Assess Code Quality:** Evaluate the code for quality, adherence to architectural patterns, potential security vulnerabilities, performance implications, and test coverage.
          4.  **Check for Completeness:** Verify that all related tasks are resolved, documentation is updated, and there are no regressions.

          For specific feedback, post comments on the exact lines of code using the `gh api` command. Provide clear explanations and use suggestion blocks for code improvements where applicable. Here is the command template:
          \`\`\`
          gh api \
            --method POST \
            -H \"Accept: application/vnd.github+json\" \
            -H \"X-GitHub-Api-Version: 2022-11-28\" \
            /repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/comments \
            -f 'body=[Your insightful comment and suggestion]' -f 'commit_id=${{ github.event.pull_request.head.sha }}' -f 'path=[path-to-file]' -F \"line=[line]\" -f 'side=RIGHT'
          \`\`\`

          After posting all line-specific comments, leave a single summary comment on the PR using `gh pr comment`. This summary should follow this structure:

          **Overall Assessment:** A brief, high-level summary of the pull request. (e.g., 'This PR looks solid and addresses the issue well, with a few minor suggestions for improvement.')
          **Key Suggestions:** A bulleted list of your most important feedback points.
          **Nitpicks and Minor Points:** A separate section for smaller, optional suggestions.

          If the PR is excellent and requires no changes, provide a positive and encouraging summary. Make it clear that your comments are suggestions for the author to consider."
